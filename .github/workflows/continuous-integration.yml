name: Continuous Integration

on:
  push:
  pull_request:
concurrency:
  # Group based on workflow name and PR if it exists, if no PR, let it run so carryforward flags work
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Use pnpm
        uses: pnpm/action-setup@v4
      - name: Use Node.js v24
        uses: actions/setup-node@v5
        with:
          node-version: 24
          cache: pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline
        env:
          HUSKY: '0'
      - name: Install dotenvx
        run: curl -sfS https://dotenvx.sh/install.sh | sh
      - name: Build packages (PR)
        if: ${{ github.event_name != 'push' }}
        run: pnpm exec turbo run build --filter="...[origin/${{ github.event_name == 'pull_request' && github.event.pull_request.base.ref || 'main' }}]" --concurrency=4
      - name: Build packages (Push)
        if: ${{ github.event_name == 'push' }}
        run: pnpm exec turbo run build --filter="...[HEAD^1]" --concurrency=4
      - name: Tests (PR)
        if: ${{ github.event_name != 'push' }}
        run: dotenvx run -- pnpm exec turbo run test --filter="...[origin/${{ github.event_name == 'pull_request' && github.event.pull_request.base.ref || 'main' }}]" --concurrency=4
        env:
          DOTENV_PRIVATE_KEY_CI: ${{ secrets.DOTENV_PRIVATE_KEY_CI }}
      - name: Tests (Push)
        if: ${{ github.event_name == 'push' }}
        run: dotenvx run -- pnpm exec turbo run test --filter="...[HEAD^1]" --concurrency=4
        env:
          DOTENV_PRIVATE_KEY_CI: ${{ secrets.DOTENV_PRIVATE_KEY_CI }}
      - name: ESLint (PR)
        if: ${{ github.event_name != 'push' }}
        run: pnpm exec turbo run lint --filter="...[origin/${{ github.event_name == 'pull_request' && github.event.pull_request.base.ref || 'main' }}]" --concurrency=4
      - name: ESLint (Push)
        if: ${{ github.event_name == 'push' }}
        run: pnpm exec turbo run lint --filter="...[HEAD^1]" --concurrency=4
      - name: Upload Coverage
        if: github.repository_owner == 'rygent'
        uses: ./.github/actions/uploadCoverage
        with:
          codecov_token: ${{ secrets.CODECOV_TOKEN }}
